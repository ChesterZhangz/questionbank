export const lib = {
  mathSymbols: {
    basicOperators: {
      plus: 'Plus',
      minus: 'Minus',
      multiply: 'Multiply',
      divide: 'Divide',
      equals: 'Equals',
      notEquals: 'Not Equals',
      lessThan: 'Less Than',
      greaterThan: 'Greater Than',
      lessThanOrEqual: 'Less Than or Equal',
      greaterThanOrEqual: 'Greater Than or Equal',
      approximately: 'Approximately',
      plusMinus: 'Plus Minus',
      minusPlus: 'Minus Plus',
      proportional: 'Proportional To'
    },
    greekLetters: {
      alpha: 'alpha',
      beta: 'beta',
      gamma: 'gamma',
      delta: 'delta',
      epsilon: 'epsilon',
      varepsilon: 'varepsilon',
      zeta: 'zeta',
      eta: 'eta',
      theta: 'theta',
      vartheta: 'vartheta',
      iota: 'iota',
      kappa: 'kappa',
      lambda: 'lambda',
      mu: 'mu',
      nu: 'nu',
      xi: 'xi',
      pi: 'pi',
      rho: 'rho',
      sigma: 'sigma',
      tau: 'tau',
      upsilon: 'upsilon',
      phi: 'phi',
      varphi: 'varphi',
      chi: 'chi',
      psi: 'psi',
      omega: 'omega',
      Alpha: 'Alpha',
      Beta: 'Beta',
      Gamma: 'Gamma',
      Delta: 'Delta',
      Theta: 'Theta',
      Lambda: 'Lambda',
      Xi: 'Xi',
      Pi: 'Pi',
      Sigma: 'Sigma',
      Phi: 'Phi',
      Psi: 'Psi',
      Omega: 'Omega'
    },
    mathFunctions: {
      sin: 'Sine',
      cos: 'Cosine',
      tan: 'Tangent',
      cot: 'Cotangent',
      sec: 'Secant',
      csc: 'Cosecant',
      arcsin: 'Arcsine',
      arccos: 'Arccosine',
      arctan: 'Arctangent',
      log: 'Logarithm',
      ln: 'Natural Logarithm',
      lg: 'Common Logarithm',
      exp: 'Exponential',
      lim: 'Limit',
      sum: 'Summation',
      int: 'Integral',
      iint: 'Double Integral',
      iiint: 'Triple Integral',
      oint: 'Contour Integral',
      prod: 'Product',
      coprod: 'Coproduct',
      max: 'Maximum',
      min: 'Minimum',
      inf: 'Infimum',
      sup: 'Supremum'
    },
    fractionsAndRoots: {
      fraction: 'Fraction',
      displayFraction: 'Display Fraction',
      textFraction: 'Text Fraction',
      squareRoot: 'Square Root',
      nthRoot: 'nth Root'
    },
    subscriptsAndBrackets: {
      superscript: 'Superscript',
      subscript: 'Subscript',
      complexSuperscript: 'Complex Superscript',
      complexSubscript: 'Complex Subscript',
      adaptiveParentheses: 'Adaptive Parentheses',
      squareBrackets: 'Square Brackets',
      curlyBrackets: 'Curly Brackets',
      absoluteValue: 'Absolute Value'
    },
    setsAndLogic: {
      belongsTo: 'Belongs To',
      notBelongsTo: 'Not Belongs To',
      properSubset: 'Proper Subset',
      subset: 'Subset',
      properSuperset: 'Proper Superset',
      superset: 'Superset',
      union: 'Union',
      intersection: 'Intersection',
      emptySet: 'Empty Set',
      realNumbers: 'Real Numbers',
      integers: 'Integers',
      naturalNumbers: 'Natural Numbers',
      rationalNumbers: 'Rational Numbers',
      complexNumbers: 'Complex Numbers'
    },
    arrowsAndRelations: {
      rightArrow: 'Right Arrow',
      leftArrow: 'Left Arrow',
      bidirectionalArrow: 'Bidirectional Arrow',
      doubleRightArrow: 'Double Right Arrow',
      doubleLeftArrow: 'Double Left Arrow',
      doubleBidirectionalArrow: 'Double Bidirectional Arrow',
      mappingArrow: 'Mapping Arrow',
      mapsTo: 'Maps To'
    },
    specialSymbols: {
      infinity: 'Infinity',
      partial: 'Partial',
      nabla: 'Nabla',
      triangle: 'Triangle',
      angle: 'Angle',
      degree: 'Degree',
      prime: 'Prime',
      doublePrime: 'Double Prime',
      ellipsis: 'Ellipsis',
      centeredEllipsis: 'Centered Ellipsis',
      verticalEllipsis: 'Vertical Ellipsis',
      diagonalEllipsis: 'Diagonal Ellipsis',
      square: 'Square',
      circle: 'Circle',
      diamond: 'Diamond',
      star: 'Star',
      bullet: 'Bullet',
      circ: 'Circle',
      bigCircle: 'Big Circle',
      bigTriangle: 'Big Triangle',
      bigTriangleDown: 'Big Triangle Down',
      lozenge: 'Lozenge',
      displayStyle: 'Display Style'
    },
    fontStyles: {
      bold: 'Bold',
      italic: 'Italic',
      roman: 'Roman',
      calligraphic: 'Calligraphic',
      script: 'Script',
      fraktur: 'Fraktur',
      blackboard: 'Blackboard Bold',
      text: 'Text Mode',
      monospace: 'Monospace',
      sansSerif: 'Sans Serif'
    },
    mathDecorations: {
      circled: 'Circled',
      hat: 'Hat',
      bar: 'Bar',
      vec: 'Vector',
      dot: 'Dot',
      doubleDot: 'Double Dot',
      tilde: 'Tilde',
      wideTilde: 'Wide Tilde',
      wideHat: 'Wide Hat',
      overline: 'Overline',
      underline: 'Underline',
      overbrace: 'Overbrace',
      underbrace: 'Underbrace',
      overset: 'Overset',
      underset: 'Underset'
    },
    matrixEnvironments: {
      parentheses: 'Parentheses Matrix',
      squareBrackets: 'Square Brackets Matrix',
      verticalBars: 'Determinant',
      doubleVerticalBars: 'Norm'
    },
    alignEnvironments: {
      aligned: 'Aligned',
      cases: 'Cases'
    },
    otherCommands: {
      xrightarrow: 'Labeled Right Arrow',
      xleftarrow: 'Labeled Left Arrow',
      xleftrightarrow: 'Labeled Bidirectional Arrow'
    },
    categories: {
      basicOperators: 'Basic Operators',
      greekLetters: 'Greek Letters',
      mathFunctions: 'Math Functions',
      fractionsRoots: 'Fractions & Roots',
      subscriptsBrackets: 'Subscripts & Brackets',
      setsLogic: 'Sets & Logic',
      arrowsRelations: 'Arrows & Relations',
      specialSymbols: 'Special Symbols',
      fontStyles: 'Font Styles',
      mathDecorations: 'Math Decorations',
      matrixEnvironments: 'Matrix Environments',
      alignEnvironments: 'Align Environments',
      otherCommands: 'Other Commands'
    }
  },
  questionSymbols: {
    choice: 'Multiple Choice',
    fill: 'Fill in the Blank',
    subp: 'Sub-problem',
    subsubp: 'Sub-sub-problem',
    categories: {
      choice: 'Multiple Choice',
      fill: 'Fill in the Blank',
      subp: 'Sub-problem',
      subsubp: 'Sub-sub-problem'
    }
  }
};
