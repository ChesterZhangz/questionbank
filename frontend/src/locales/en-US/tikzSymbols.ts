export const tikzSymbols = {
  drawCommands: {
    draw: 'Draw Path',
    drawDescription: 'Draw path or shape',
    fill: 'Fill Shape',
    fillDescription: 'Fill closed shape',
    shade: 'Gradient Fill',
    shadeDescription: 'Create gradient fill effect',
    path: 'Path Command',
    pathDescription: 'Define path without drawing',
    clip: 'Clip Area',
    clipDescription: 'Clip subsequent drawing content'
  },
  shapeCommands: {
    circle: 'Circle',
    circleDescription: 'Draw circle',
    rectangle: 'Rectangle',
    rectangleDescription: 'Draw rectangle',
    ellipse: 'Ellipse',
    ellipseDescription: 'Draw ellipse',
    arc: 'Arc',
    arcDescription: 'Draw arc',
    parabola: 'Parabola',
    parabolaDescription: 'Draw parabola',
    line: 'Line',
    lineDescription: 'Draw line',
    grid: 'Grid',
    gridDescription: 'Draw grid'
  },
  nodeCommands: {
    node: 'Node',
    nodeDescription: 'Create text or graphic node',
    coordinate: 'Coordinate',
    coordinateDescription: 'Define coordinate point',
    pic: 'Picture',
    picDescription: 'Insert predefined picture'
  },
  styleCommands: {
    color: 'Color',
    colorDescription: 'Set color',
    fill: 'Fill Color',
    fillDescription: 'Set fill color',
    draw: 'Draw Color',
    drawDescription: 'Set draw color',
    lineWidth: 'Line Width',
    lineWidthDescription: 'Set line width',
    lineCap: 'Line Cap Style',
    lineCapDescription: 'Set line end style',
    lineJoin: 'Line Join Style',
    lineJoinDescription: 'Set line join style',
    dashPattern: 'Dash Style',
    dashPatternDescription: 'Set dash style',
    opacity: 'Opacity',
    opacityDescription: 'Set opacity'
  },
  colors: {
    red: 'Red',
    blue: 'Blue',
    green: 'Green',
    yellow: 'Yellow',
    orange: 'Orange',
    purple: 'Purple',
    brown: 'Brown',
    pink: 'Pink',
    gray: 'Gray',
    cyan: 'Cyan',
    magenta: 'Magenta',
    black: 'Black',
    white: 'White',
    lightRed: 'Light Red',
    mediumBlue: 'Medium Blue',
    darkGreen: 'Dark Green',
    redBlueMix: 'Red-Blue Mix',
    blueGreenMix: 'Blue-Green Mix'
  },
  lineWidths: {
    ultraThin: 'Ultra Thin',
    veryThin: 'Very Thin',
    thin: 'Thin',
    semithick: 'Medium',
    thick: 'Thick',
    veryThick: 'Very Thick',
    ultraThick: 'Ultra Thick',
    pt05: '0.5pt',
    pt1: '1pt',
    pt2: '2pt',
    pt3: '3pt'
  },
  lineStyles: {
    solid: 'Solid',
    dashed: 'Dashed',
    dotted: 'Dotted',
    looselyDashed: 'Loosely Dashed',
    denselyDashed: 'Densely Dashed',
    looselyDotted: 'Loosely Dotted',
    denselyDotted: 'Densely Dotted',
    customDashed: 'Custom Dashed',
    longDashed: 'Long Dashed'
  },
  opacities: {
    p10: '10%',
    p20: '20%',
    p30: '30%',
    p40: '40%',
    p50: '50%',
    p60: '60%',
    p70: '70%',
    p80: '80%',
    p90: '90%'
  },
  transforms: {
    scale: 'Scale',
    scaleDescription: 'Scale shape',
    rotate: 'Rotate',
    rotateDescription: 'Rotate shape',
    shift: 'Shift',
    shiftDescription: 'Translate shape',
    translate: 'Translate',
    translateDescription: 'Translate shape (alias)',
    transformShape: 'Transform Shape',
    transformShapeDescription: 'Allow shape to be transformed'
  },
  mathFunctions: {
    sin: 'Sine Function',
    sinDescription: 'Calculate sine value',
    cos: 'Cosine Function',
    cosDescription: 'Calculate cosine value',
    tan: 'Tangent Function',
    tanDescription: 'Calculate tangent value',
    sqrt: 'Square Root',
    sqrtDescription: 'Calculate square root',
    exp: 'Exponential Function',
    expDescription: 'Calculate exponential value',
    log: 'Logarithm Function',
    logDescription: 'Calculate logarithm value',
    ln: 'Natural Logarithm',
    lnDescription: 'Calculate natural logarithm value',
    x2: 'Quadratic Function',
    x2Description: 'Quadratic function y=x²',
    x3: 'Cubic Function',
    x3Description: 'Cubic function y=x³',
    inverse: 'Inverse Function',
    inverseDescription: 'Inverse function y=1/x'
  },
  greekLetters: {
    alpha: 'Alpha',
    beta: 'Beta',
    gamma: 'Gamma',
    delta: 'Delta',
    epsilon: 'Epsilon',
    theta: 'Theta',
    lambda: 'Lambda',
    mu: 'Mu',
    pi: 'Pi',
    sigma: 'Sigma',
    phi: 'Phi',
    omega: 'Omega'
  },
  mathSymbols: {
    infinity: 'Infinity',
    infinityDescription: 'Infinity symbol',
    partial: 'Partial Derivative',
    partialDescription: 'Partial derivative symbol',
    gradient: 'Gradient',
    gradientDescription: 'Gradient symbol',
    delta: 'Delta',
    deltaDescription: 'Capital Delta',
    omega: 'Omega',
    omegaDescription: 'Capital Omega',
    gamma: 'Gamma',
    gammaDescription: 'Capital Gamma',
    lambda: 'Lambda',
    lambdaDescription: 'Capital Lambda',
    phi: 'Phi',
    phiDescription: 'Capital Phi',
    psi: 'Psi',
    psiDescription: 'Capital Psi',
    theta: 'Theta',
    thetaDescription: 'Capital Theta',
    xi: 'Xi',
    xiDescription: 'Capital Xi',
    pi: 'Pi',
    piDescription: 'Capital Pi',
    sigma: 'Sigma',
    sigmaDescription: 'Capital Sigma'
  },
  arrows: {
    rightArrow: 'Right Arrow',
    rightArrowDescription: 'Arrow pointing right',
    leftArrow: 'Left Arrow',
    leftArrowDescription: 'Arrow pointing left',
    straightLine: 'Straight Line',
    straightLineDescription: 'Line without arrow',
    doubleRightArrow: 'Double Right Arrow',
    doubleRightArrowDescription: 'Double line arrow pointing right',
    doubleLeftArrow: 'Double Left Arrow',
    doubleLeftArrowDescription: 'Double line arrow pointing left',
    bidirectionalArrow: 'Bidirectional Arrow',
    bidirectionalArrowDescription: 'Bidirectional arrow',
    doubleBidirectionalArrow: 'Double Bidirectional Arrow',
    doubleBidirectionalArrowDescription: 'Double bidirectional arrow'
  },
  drawParameters: {
    rightArrow: 'Right Arrow',
    rightArrowDescription: 'Add arrow at line end',
    leftArrow: 'Left Arrow',
    leftArrowDescription: 'Add arrow at line start',
    doubleArrow: 'Double Arrow',
    doubleArrowDescription: 'Add arrows at both ends',
    doubleRightArrow: 'Double Right Arrow',
    doubleRightArrowDescription: 'Double line arrow pointing right',
    doubleLeftArrow: 'Double Left Arrow',
    doubleLeftArrowDescription: 'Double line arrow pointing left',
    doubleBidirectionalArrow: 'Double Bidirectional Arrow',
    doubleBidirectionalArrowDescription: 'Double bidirectional arrow',
    ultraThin: 'Ultra Thin',
    veryThin: 'Very Thin',
    thin: 'Thin',
    semithick: 'Medium',
    thick: 'Thick',
    veryThick: 'Very Thick',
    ultraThick: 'Ultra Thick',
    solid: 'Solid',
    dashed: 'Dashed',
    dotted: 'Dotted',
    looselyDashed: 'Loosely Dashed',
    denselyDashed: 'Densely Dashed',
    looselyDotted: 'Loosely Dotted',
    denselyDotted: 'Densely Dotted',
    red: 'Red',
    blue: 'Blue',
    green: 'Green',
    black: 'Black',
    gray: 'Gray',
    purple: 'Purple',
    orange: 'Orange',
    brown: 'Brown',
    opacity30: '30% Opacity',
    opacity50: '50% Opacity',
    opacity70: '70% Opacity',
    opacity90: '90% Opacity'
  },
  nodeParameters: {
    above: 'Above',
    aboveDescription: 'Node positioned above',
    below: 'Below',
    belowDescription: 'Node positioned below',
    left: 'Left',
    leftDescription: 'Node positioned left',
    right: 'Right',
    rightDescription: 'Node positioned right',
    aboveLeft: 'Above Left',
    aboveLeftDescription: 'Node positioned above left',
    aboveRight: 'Above Right',
    aboveRightDescription: 'Node positioned above right',
    belowLeft: 'Below Left',
    belowLeftDescription: 'Node positioned below left',
    belowRight: 'Below Right',
    belowRightDescription: 'Node positioned below right',
    circle: 'Circle',
    circleDescription: 'Circular node',
    rectangle: 'Rectangle',
    rectangleDescription: 'Rectangular node',
    ellipse: 'Ellipse',
    ellipseDescription: 'Elliptical node',
    minimumSize: 'Minimum Size',
    minimumSizeDescription: 'Set node minimum size',
    textWidth: 'Text Width',
    textWidthDescription: 'Set text width'
  },
  fillParameters: {
    red: 'Red Fill',
    blue: 'Blue Fill',
    green: 'Green Fill',
    yellow: 'Yellow Fill',
    purple: 'Purple Fill',
    orange: 'Orange Fill',
    brown: 'Brown Fill',
    pink: 'Pink Fill',
    cyan: 'Cyan Fill',
    magenta: 'Magenta Fill',
    black: 'Black Fill',
    white: 'White Fill',
    gray: 'Gray Fill',
    lightRed: 'Light Red',
    mediumBlue: 'Medium Blue',
    darkGreen: 'Dark Green',
    redBlueMix: 'Red-Blue Mix',
    blueGreenMix: 'Blue-Green Mix',
    opacity10: '10% Opacity',
    opacity30: '30% Opacity',
    opacity50: '50% Opacity',
    opacity70: '70% Opacity',
    opacity90: '90% Opacity',
    none: 'No Fill',
    noneDescription: 'No fill',
    patternNortheast: 'Northeast Line Pattern',
    patternNortheastDescription: 'Northeast direction line pattern',
    patternNorthwest: 'Northwest Line Pattern',
    patternNorthwestDescription: 'Northwest direction line pattern',
    patternCrosshatch: 'Crosshatch Pattern',
    patternCrosshatchDescription: 'Crosshatch pattern',
    patternDots: 'Dot Pattern',
    patternDotsDescription: 'Dot pattern'
  },
  pathParameters: {
    namePath: 'Name Path',
    namePathDescription: 'Name the path',
    clip: 'Clip',
    clipDescription: 'Use as clip path',
    useAsBoundingBox: 'Bounding Box',
    useAsBoundingBoxDescription: 'Use as bounding box'
  },
  functionParameters: {
    samples50: '50 Samples',
    samples50Description: '50 sample points (suitable for simple functions)',
    samples100: '100 Samples',
    samples100Description: '100 sample points (recommended)',
    samples150: '150 Samples',
    samples150Description: '150 sample points (high precision)',
    samples200: '200 Samples',
    samples200Description: '200 sample points (highest precision)',
    domainMinus5To5: 'Domain [-5,5]',
    domainMinus5To5Description: 'x-axis range from -5 to 5',
    domain0To10: 'Domain [0,10]',
    domain0To10Description: 'x-axis range from 0 to 10',
    domainMinus10To10: 'Domain [-10,10]',
    domainMinus10To10Description: 'x-axis range from -10 to 10',
    domain0To2Pi: 'Domain [0,2π]',
    domain0To2PiDescription: 'x-axis range from 0 to 2π (trigonometric functions)',
    smooth: 'Smooth Curve',
    smoothDescription: 'Generate smooth curve',
    tension05: 'Tension 0.5',
    tension05Description: 'Set curve tension to 0.5',
    tension10: 'Tension 1.0',
    tension10Description: 'Set curve tension to 1.0',
    redFunction: 'Red Function',
    redFunctionDescription: 'Red function curve',
    blueFunction: 'Blue Function',
    blueFunctionDescription: 'Blue function curve',
    greenFunction: 'Green Function',
    greenFunctionDescription: 'Green function curve',
    thick: 'Thick Line',
    thickDescription: 'Thick line function',
    dashed: 'Dashed Line',
    dashedDescription: 'Dashed line function'
  },
  gradientParameters: {
    leftColor: 'Left Color',
    leftColorDescription: 'Gradient left color',
    rightColor: 'Right Color',
    rightColorDescription: 'Gradient right color',
    topColor: 'Top Color',
    topColorDescription: 'Gradient top color',
    bottomColor: 'Bottom Color',
    bottomColorDescription: 'Gradient bottom color'
  }
};
