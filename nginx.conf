events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器
    upstream backend {
        server mareate-app:3001;
    }

    # HTTP服务器 - 重定向到HTTPS
    server {
        listen 80;
        server_name www.mareate.com mareate.com 43.160.253.32;
        
        # 重定向所有HTTP请求到HTTPS
        return 301 https://www.mareate.com$request_uri;
    }
    
    # 特殊处理api主机名 - 修复混合内容错误
    server {
        listen 80 default_server;
        
        # 处理api主机名的请求
        location / {
            if ($http_host = "api") {
                return 301 https://www.mareate.com/api$request_uri;
            }
            
            # 处理直接访问api路径的请求
            if ($request_uri ~ "^/api/(.*)") {
                return 301 https://www.mareate.com/api/$1;
            }
            
            # 默认情况下不做处理，让后面的server块处理
            try_files $uri $uri/ =404;
        }
    }
    
    # HTTPS服务器 - 启用SSL
    server {
        listen 443 ssl http2;
        server_name www.mareate.com mareate.com;
        
        # SSL证书配置
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # API代理 - 优先处理
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # 文件上传代理
        location /uploads/ {
            proxy_pass http://backend/uploads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 临时文件代理
        location /temp/ {
            proxy_pass http://backend/temp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 健康检查
        location /health {
            proxy_pass http://backend/health;
            access_log off;
        }
        
        # 图标文件特殊处理
        location ~* ^/avatar/.*\.(png|jpg|jpeg|gif|ico)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Content-Type "image/png";
        }
        
        # Vite构建后的assets文件处理
        location ~* ^/assets/.*\.(png|jpg|jpeg|gif|ico|css|js|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # 其他请求代理到后端
        location / {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 